<mxfile host="app.diagrams.net" modified="2023-02-22T11:56:31.612Z" agent="5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36" etag="xXctanUgJKDcfQVt7o5w" version="20.8.22" type="github">
  <diagram name="第 1 页" id="E4wIWDK8ls2cxWM5GnW3">
    <mxGraphModel dx="1803" dy="983" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="ZrVofOx51LjPYbL0JF4Y-2" value="传统的Socket模型：&lt;br&gt;两个服务器想要进行网络通信，必定要借助Socket模型&lt;br&gt;通信的双方都需要开启Socket，传统的Socket的创建步骤&lt;br&gt;首先是创建Socket对象，指定网络层协议是IPV4还是IPV6，指定传输层协议是UDP还是TCP&lt;br&gt;在创建了Socket以后，通过bind函数，绑定ip地址和端口号&lt;br&gt;然后执行listen函数进行监听，通过accept函数来处理客户端的传输信息&lt;br&gt;但是accept在客户端没有请求的时候是阻塞状态，且一个accept处理一个客户端的信息&lt;br&gt;这就导致了传统的Socket模型不能并发" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="60" y="90" width="510" height="130" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
